plugins {
	id 'fabric-loom'
	id 'maven-publish'
	id 'org.jetbrains.kotlin.jvm'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	//clientOnlyMinecraftJar()
	//serverOnlyMinecraftJar()
	runtimeOnlyLog4j = true
}

repositories {
	maven { url = 'https://maven.fabricmc.net/' }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	//modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	//modImplementation(fabricApi.module('fabric-resource-loader-v0', project.fabric_version))
	//modImplementation('io.github.prospector:modmenu:1.14.6+build.31') {
	//	exclude module: 'fabric-api' // includes bad Fabric API
	//}

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	filesMatching("fabric.mod.json") {
		expand 'version': project.version,
			'loader_version': project.loader_version,
			'fabric_kotlin_version': project.fabric_kotlin_version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
compileJava {
	options.encoding = 'UTF-8'
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()

		maven {
			url = uri(file(System.properties['user.home'] + '/maven'))
		}
	}
}

compileKotlin.kotlinOptions.jvmTarget = '17'
